// a_i | b_i | sum_e

// when mag(a_i) <= mag(b_i), use sign of b_i
0111_1111_1000	// 7 + (-7) = (-0)
1011_0011_0000	// (-3) + 3 = 0

// when overflowing, only keep bits 2:0, maintain sign
1111_1110_1101	// (-7) + (-6) = (-13) truncated to (-5)
0101_0011_0000	// 5 + 3 = 8 truncated to 0

// (-1) + x
1001_0000_1001
1001_0001_0000
1001_0010_0001
1001_0011_0010
1001_0100_0011
1001_0101_0100
1001_0110_0101
1001_0111_0110
1001_1000_1001
1001_1001_1010
1001_1010_1011
1001_1011_1100
1001_1100_1101
1001_1101_1110
1001_1110_1111
1001_1111_1000	// overflow -8
